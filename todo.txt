現状 static_inline::just_refed が ppt の設計書の defer に相当している. 設計書
があるのだから, それに沿ったコーディングをするべき.
---------------------------------------------------------------------------
d:/home/khasegawa/GNU_LANG
で, どのプロセッサか忘れたが, cross 環境を構築できていた. そのプロセッサの
ジェネレータを作ってみたい.
---------------------------------------------------------------------------
ドキュメントコンパイラのアイディア. ドキュメントコンパイラに函数の重要性を判定させる. 重要な函数や変数がドキュメントの先頭にくるようにするとか、重要マークを付けるとか・・・
---------------------------------------------------------------------------
D:\home\khasegaw\lang\20_hcc1\src\sample.txt --generator C:\home\khasegaw\lang\30_intel\src\Debug\intel.dll --output-medium --generator-option ( --debug ) --simple-medium --optimize 1 --output-optinfo

D:\home\khasegaw\lang\20_hcc1\src\sample.txt --generator C:\home\khasegaw\lang\30_intel\src\Debug\intel.dll --output-medium --generator-option ( --debug ) --simple-medium
----------------------------------------------------------------------------
o 5 秒以内で終わらないもの

41_ISO_IEC_9899/6_Language/1_Lexical_elements/3_Constants/4_Character_constants/1_ok/test000.c
41_ISO_IEC_9899/6_Language/1_Lexical_elements/3_Constants/4_Character_constants/1_ok/test005.c

o use_after を必ず true を返るようにしても test000.c で 6 秒費やしている.
  通常通りならば 8 - 9 秒

o 最適化なしでできるだけ複写伝播を抑えることができないか???
o テストベンチジェネレータ (学習型) なんていうのはできないか???

o generate::assigns がごちゃごちゃしている.
o 構文解析エラーを error 句を利用してうまく処理する
o warning を追加したい
  1. 参照されない変数の宣言
　　　o パラメータ
　　　o パラメータ以外のローカル変数
  2. 不定値を参照する式
  3. 参照されない static 函数, static 変数
  4. 函数からら戻り値を返さないパス
  5. スタックのアドレスを返す return
  6. セットされるが参照されない変数
----------------------------------------------------------------------------
46_optimization/test135.c
現状は pass している. 対処は refsomewhere::rvalue() で

tmp := &ref
ret := tmp + m_offset

を生成するようにした. 以前は tmp を使用しないで

ret := &ref
ret := ret + m_offset

としてた.
現在採用している dag の最適化ルーチンが

x := y op z

で y も z も x とは異なることを仮定した上で成立しているのかどうか不明.
もしそうなら, 他にもこの仮定を満たしていないコード生成の箇所がある.
(それとも単なる実装のバグなのかも不明).
----------------------------------------------------------------------------
int x, y;
...
x = 定数1;
y = 定数2;
if (x == y) {
  ...
}
現状これが最適化されていない.
----------------------------------------------------------------------------
c.y c.l のようなものから C 言語を生成するようなツールを作れないだろうか.
----------------------------------------------------------------------------
割り込みハンドラを hcc1 と専用ジェネレータにコンパイルさせて C 言語ライクに OS を
書けないだろうか. そうすることで可読性が上がるし、今は無理でも、効率を損なうことがない
と思われる.
----------------------------------------------------------------------------
o 入力:プログラム, テストケース1
o 出力:いろいろなテストケース
こういうツールを作れないだろうか...
----------------------------------------------------------------------------
インターネットで通じ合うエンジニア(プログラマ)、テスタ、デザイナ、マネージャに企業との
仕事を仲介するようなことができないだろうか.
自分が代打できるならこういう形で仕事をするのもアリ.
----------------------------------------------------------------------------
スマートフォンから自宅家電を遠隔操作するようなシステムを構築できたら、...うれしい?
2018/09/06 の時点で Google Home のようなものが既に存在してますね。
----------------------------------------------------------------------------
大規模災害シミュレータなんぞできたりしない。分散コンピューティングのテクニックが必要
になるだろう。台風、地震がこのところ頻発している。 (2018/09/06)
----------------------------------------------------------------------------
6.7.2.3 Tags
A type specifier of the form
enum identifier
without an enumerator list shall only appear after the type it specifies is completed.

とあるが、これって不完全型 enum を宣言するのはエラーだと言ってる?

struct S;   // S は不完全型構造体. ok
enum E;  // E は不完全型. error?


